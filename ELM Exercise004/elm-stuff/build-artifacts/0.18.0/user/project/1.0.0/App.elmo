var _user$project$App$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$App_ops = _user$project$App_ops || {};
_user$project$App_ops['|||>'] = F2(
	function (_p0, f) {
		var _p1 = _p0;
		return A3(f, _p1._0, _p1._1, _p1._2);
	});
var _user$project$App$generateMortgageStep = F3(
	function (a, b, c) {
		return A2(
			_user$project$App_ops['|||>'],
			{ctor: '_Tuple3', _0: a, _1: b, _2: c},
			_elm_lang$core$Result$map3(
				F3(
					function (mortgage, interestRate, numYear) {
						var v = 1.0 / (1.0 + interestRate);
						var payment = (mortgage * interestRate) / (1.0 - Math.pow(
							v,
							_elm_lang$core$Basics$toFloat(numYear)));
						var firstMortgageStep = {year: 0, principalRemaining: mortgage, interest: mortgage * interestRate, payment: payment};
						return A3(
							_elm_lang$core$List$scanl,
							F2(
								function (_p2, acc) {
									var principalRemaining = (acc.principalRemaining + acc.interest) - acc.payment;
									return _elm_lang$core$Native_Utils.update(
										acc,
										{year: acc.year + 1, principalRemaining: principalRemaining, interest: principalRemaining * interestRate});
								}),
							firstMortgageStep,
							A2(_elm_lang$core$List$range, 1, numYear));
					})));
	});
var _user$project$App$update = F2(
	function (msg, model) {
		var newModel = function () {
			var _p3 = msg;
			switch (_p3.ctor) {
				case 'Calculate':
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							schedule: A2(
								_elm_lang$core$Result$withDefault,
								model.schedule,
								A3(_user$project$App$generateMortgageStep, model.mortgageAmount, model.interestRate, model.numYear))
						});
				case 'CheckNumYear':
					var _p6 = _p3._0;
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							numYear: A2(
								_elm_lang$core$Result$andThen,
								function (x) {
									return (_elm_lang$core$Native_Utils.cmp(x, 0) < 1) ? _elm_lang$core$Result$Err('Too low') : ((_elm_lang$core$Native_Utils.cmp(x, 30) > 0) ? _elm_lang$core$Result$Err('Too high') : _elm_lang$core$Result$Ok(x));
								},
								function () {
									var _p4 = _p6;
									if (_p4 === '') {
										return _elm_lang$core$Result$Err('No Input');
									} else {
										return A2(
											_elm_lang$core$Result$mapError,
											function (_p5) {
												return 'Invalid Input';
											},
											_elm_lang$core$String$toInt(_p6));
									}
								}())
						});
				case 'CheckInterestRate':
					var _p9 = _p3._0;
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							interestRate: A2(
								_elm_lang$core$Result$andThen,
								function (x) {
									return (_elm_lang$core$Native_Utils.cmp(x, 0.0) < 1) ? _elm_lang$core$Result$Err('Too low') : ((_elm_lang$core$Native_Utils.cmp(x, 1.0) > -1) ? _elm_lang$core$Result$Err('Too high') : _elm_lang$core$Result$Ok(x));
								},
								function () {
									var _p7 = _p9;
									if (_p7 === '') {
										return _elm_lang$core$Result$Err('No Input');
									} else {
										return A2(
											_elm_lang$core$Result$mapError,
											function (_p8) {
												return 'Invalid Input';
											},
											_elm_lang$core$String$toFloat(_p9));
									}
								}())
						});
				default:
					var _p12 = _p3._0;
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							mortgageAmount: A2(
								_elm_lang$core$Result$andThen,
								function (x) {
									return (_elm_lang$core$Native_Utils.cmp(x, 0.0) < 1) ? _elm_lang$core$Result$Err('Mortgage amount must be positive.') : _elm_lang$core$Result$Ok(x);
								},
								function () {
									var _p10 = _p12;
									if (_p10 === '') {
										return _elm_lang$core$Result$Err('No Input');
									} else {
										return A2(
											_elm_lang$core$Result$mapError,
											function (_p11) {
												return 'Invalid Input';
											},
											_elm_lang$core$String$toFloat(_p12));
									}
								}())
						});
			}
		}();
		return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$App_ops = _user$project$App_ops || {};
_user$project$App_ops['||>'] = F2(
	function (_p13, f) {
		var _p14 = _p13;
		return A2(f, _p14._0, _p14._1);
	});
var _user$project$App$tableStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '70%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '15%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '15%'},
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$App$backgroundStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'backgroundColor', _1: 'AliceBlue'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '70%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '15%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '15%'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$App$calculateStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'grey'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'border', _1: 'none'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '4px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 20px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'text-decoration', _1: 'none'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$App$init = function () {
	var initialModel = {
		mortgageAmount: _elm_lang$core$Result$Err('No Input'),
		interestRate: _elm_lang$core$Result$Err('No Input'),
		numYear: _elm_lang$core$Result$Err('No Input'),
		schedule: {ctor: '[]'}
	};
	return {ctor: '_Tuple2', _0: initialModel, _1: _elm_lang$core$Platform_Cmd$none};
}();
var _user$project$App$MortgageStep = F4(
	function (a, b, c, d) {
		return {year: a, principalRemaining: b, interest: c, payment: d};
	});
var _user$project$App$Model = F4(
	function (a, b, c, d) {
		return {mortgageAmount: a, interestRate: b, numYear: c, schedule: d};
	});
var _user$project$App$CheckNumYear = function (a) {
	return {ctor: 'CheckNumYear', _0: a};
};
var _user$project$App$CheckInterestRate = function (a) {
	return {ctor: 'CheckInterestRate', _0: a};
};
var _user$project$App$CheckMortgageInput = function (a) {
	return {ctor: 'CheckMortgageInput', _0: a};
};
var _user$project$App$Calculate = {ctor: 'Calculate'};
var _user$project$App$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$App$backgroundStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$App$Calculate),
					_1: {
						ctor: '::',
						_0: _user$project$App$calculateStyle,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Calculate'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$App$tableStyle,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$table,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$thead,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Field'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('User Input'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Validity'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$tr,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$td,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Mortgage Amount'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$td,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$input,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$type_('text'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$placeholder('e.g. $1000000'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Events$onInput(_user$project$App$CheckMortgageInput),
																		_1: {ctor: '[]'}
																	}
																}
															},
															{ctor: '[]'}),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(
																function (temp) {
																	var _p15 = temp;
																	if (_p15.ctor === 'Err') {
																		return _p15._0;
																	} else {
																		return 'OK';
																	}
																}(model.mortgageAmount)),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$tr,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$td,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Interest Rate'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$input,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$type_('text'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$placeholder('e.g. 0.0 < x < 1.0'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$html$Html_Events$onInput(_user$project$App$CheckInterestRate),
																			_1: {ctor: '[]'}
																		}
																	}
																},
																{ctor: '[]'}),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(
																	function (temp) {
																		var _p16 = temp;
																		if (_p16.ctor === 'Err') {
																			return _p16._0;
																		} else {
																			return 'OK';
																		}
																	}(model.interestRate)),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$tr,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Num of Year'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$input,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$type_('text'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$placeholder('e.g. 0 < n < 30'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$html$Html_Events$onInput(_user$project$App$CheckNumYear),
																				_1: {ctor: '[]'}
																			}
																		}
																	},
																	{ctor: '[]'}),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$td,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(
																		function (temp) {
																			var _p17 = temp;
																			if (_p17.ctor === 'Err') {
																				return _p17._0;
																			} else {
																				return 'OK';
																			}
																		}(model.numYear)),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _user$project$App$tableStyle,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: function (tableContent) {
								return A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _user$project$App$tableStyle,
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$table,
											{ctor: '[]'},
											tableContent),
										_1: {ctor: '[]'}
									});
							}(
								A2(
									F2(
										function (x, y) {
											return A2(_elm_lang$core$Basics_ops['++'], x, y);
										}),
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$thead,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Year'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Principal Remaining'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('Interest'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$th,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Payment'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}
												}
											}),
										_1: {ctor: '[]'}
									},
									A2(
										_elm_lang$core$List$map,
										function (x) {
											return A2(
												_elm_lang$html$Html$tr,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(
																_elm_lang$core$Basics$toString(x.year)),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(
																	_elm_lang$core$Basics$toString(x.principalRemaining)),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$td,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(
																		_elm_lang$core$Basics$toString(x.interest)),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$td,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(
																			_elm_lang$core$Basics$toString(x.payment)),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}
													}
												});
										},
										model.schedule))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$App$main = _elm_lang$html$Html$program(
	{init: _user$project$App$init, view: _user$project$App$view, update: _user$project$App$update, subscriptions: _user$project$App$subscriptions})();
