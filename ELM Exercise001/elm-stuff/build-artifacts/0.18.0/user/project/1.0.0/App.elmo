var _user$project$App$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$App$update = F2(
	function (msg, model) {
		var newModel = function () {
			var _p0 = msg;
			switch (_p0.ctor) {
				case 'BuyStock':
					var _p1 = A2(
						_elm_lang$core$Result$withDefault,
						{ctor: '_Tuple3', _0: 'Error. No action.', _1: model.amount, _2: model.balance},
						A2(
							_elm_lang$core$Result$andThen,
							function (price) {
								return A2(
									_elm_lang$core$Result$map,
									function (quantity) {
										return {
											ctor: '_Tuple3',
											_0: A2(
												_elm_lang$core$Basics_ops['++'],
												'Bought ',
												A2(
													_elm_lang$core$Basics_ops['++'],
													_elm_lang$core$Basics$toString(quantity),
													' Shares')),
											_1: model.amount + quantity,
											_2: model.balance - (_elm_lang$core$Basics$toFloat(quantity) * price)
										};
									},
									model.convertedQuantity);
							},
							model.convertedPrice));
					var action = _p1._0;
					var amount = _p1._1;
					var balance = _p1._2;
					return _elm_lang$core$Native_Utils.update(
						model,
						{amount: amount, balance: balance, action: action});
				case 'SellStock':
					var _p2 = A2(
						_elm_lang$core$Result$withDefault,
						{ctor: '_Tuple3', _0: 'Error. No action.', _1: model.amount, _2: model.balance},
						A2(
							_elm_lang$core$Result$andThen,
							function (price) {
								return A2(
									_elm_lang$core$Result$map,
									function (quantity) {
										return {
											ctor: '_Tuple3',
											_0: A2(
												_elm_lang$core$Basics_ops['++'],
												'Sold ',
												A2(
													_elm_lang$core$Basics_ops['++'],
													_elm_lang$core$Basics$toString(quantity),
													' Shares')),
											_1: model.amount - quantity,
											_2: model.balance + (_elm_lang$core$Basics$toFloat(quantity) * price)
										};
									},
									model.convertedQuantity);
							},
							model.convertedPrice));
					var action = _p2._0;
					var amount = _p2._1;
					var balance = _p2._2;
					return _elm_lang$core$Native_Utils.update(
						model,
						{amount: amount, balance: balance, action: action});
				case 'SetPrice':
					var _p5 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							convertedPrice: A2(
								_elm_lang$core$Result$andThen,
								function (x) {
									return (_elm_lang$core$Native_Utils.cmp(x, 0.0) < 1) ? _elm_lang$core$Result$Err('Price must be positive.') : _elm_lang$core$Result$Ok(x);
								},
								function () {
									var _p3 = _p5;
									if (_p3 === '') {
										return _elm_lang$core$Result$Err('No Input');
									} else {
										return A2(
											_elm_lang$core$Result$mapError,
											function (_p4) {
												return 'Invalid Input';
											},
											_elm_lang$core$String$toFloat(_p5));
									}
								}())
						});
				default:
					var _p8 = _p0._0;
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							convertedQuantity: A2(
								_elm_lang$core$Result$andThen,
								function (x) {
									return (_elm_lang$core$Native_Utils.cmp(x, 0) < 1) ? _elm_lang$core$Result$Err('Quantity must be positive.') : _elm_lang$core$Result$Ok(x);
								},
								function () {
									var _p6 = _p8;
									if (_p6 === '') {
										return _elm_lang$core$Result$Err('No Input');
									} else {
										return A2(
											_elm_lang$core$Result$mapError,
											function (_p7) {
												return 'Invalid Input';
											},
											_elm_lang$core$String$toInt(_p8));
									}
								}())
						});
			}
		}();
		return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$App$tableStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '70%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '15%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '15%'},
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$App$backgroundStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'backgroundColor', _1: 'AliceBlue'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '70%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '15%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '15%'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$App$sellButtonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#f44336'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'border', _1: 'none'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '4px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 20px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'text-decoration', _1: 'none'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$App$buyButtonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#4CAF50'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'border', _1: 'none'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '4px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 20px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'text-decoration', _1: 'none'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$App$init = function () {
	var initialModel = {
		amount: 135,
		balance: 100000.0,
		convertedPrice: _elm_lang$core$Result$Err('No Input'),
		convertedQuantity: _elm_lang$core$Result$Err('No Input'),
		action: ''
	};
	return {ctor: '_Tuple2', _0: initialModel, _1: _elm_lang$core$Platform_Cmd$none};
}();
var _user$project$App$Model = F5(
	function (a, b, c, d, e) {
		return {amount: a, balance: b, convertedPrice: c, convertedQuantity: d, action: e};
	});
var _user$project$App$SetQuantity = function (a) {
	return {ctor: 'SetQuantity', _0: a};
};
var _user$project$App$SetPrice = function (a) {
	return {ctor: 'SetPrice', _0: a};
};
var _user$project$App$SellStock = {ctor: 'SellStock'};
var _user$project$App$BuyStock = {ctor: 'BuyStock'};
var _user$project$App$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$App$backgroundStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$App$BuyStock),
							_1: {
								ctor: '::',
								_0: _user$project$App$buyButtonStyle,
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Buy Stock'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$App$SellStock),
								_1: {
									ctor: '::',
									_0: _user$project$App$sellButtonStyle,
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Sell Stock'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$App$tableStyle,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$table,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$thead,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Field'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('User Input'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Validity'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$tr,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$td,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Price'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$td,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$input,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$type_('text'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$placeholder('Price'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Events$onInput(_user$project$App$SetPrice),
																		_1: {ctor: '[]'}
																	}
																}
															},
															{ctor: '[]'}),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(
																function (temp) {
																	var _p9 = temp;
																	if (_p9.ctor === 'Err') {
																		return _p9._0;
																	} else {
																		return 'OK';
																	}
																}(model.convertedPrice)),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$tr,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$td,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Quantity'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$input,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$type_('text'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$placeholder('Quantity'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$html$Html_Events$onInput(_user$project$App$SetQuantity),
																			_1: {ctor: '[]'}
																		}
																	}
																},
																{ctor: '[]'}),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(
																	function (temp) {
																		var _p10 = temp;
																		if (_p10.ctor === 'Err') {
																			return _p10._0;
																		} else {
																			return 'OK';
																		}
																	}(model.convertedQuantity)),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _user$project$App$tableStyle,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$table,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$tr,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$td,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Remaining Stock'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(
																	_elm_lang$core$Basics$toString(model.amount)),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$tr,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$td,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('Remaining Balance'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$td,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(
																		A2(
																			_elm_lang$core$Basics_ops['++'],
																			'$',
																			_elm_lang$core$Basics$toString(model.balance))),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$tr,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$td,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Action Taken'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$td,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(
																			_elm_lang$core$Basics$toString(model.action)),
																		_1: {ctor: '[]'}
																	}),
																_1: {ctor: '[]'}
															}
														}),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$App$main = _elm_lang$html$Html$program(
	{init: _user$project$App$init, view: _user$project$App$view, update: _user$project$App$update, subscriptions: _user$project$App$subscriptions})();
