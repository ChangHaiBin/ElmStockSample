var _user$project$App$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$App_ops = _user$project$App_ops || {};
_user$project$App_ops['|||>'] = F2(
	function (_p0, f) {
		var _p1 = _p0;
		return A3(f, _p1._0, _p1._1, _p1._2);
	});
var _user$project$App_ops = _user$project$App_ops || {};
_user$project$App_ops['||>'] = F2(
	function (_p2, f) {
		var _p3 = _p2;
		return A2(f, _p3._0, _p3._1);
	});
var _user$project$App$tableStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '70%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '15%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '15%'},
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$App$backgroundStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'backgroundColor', _1: 'AliceBlue'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '70%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '15%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '15%'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$App$calculateStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'grey'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'border', _1: 'none'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '4px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 20px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'text-decoration', _1: 'none'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$App$init = function () {
	var initialModel = {userInput: '', question: 1, correct: _elm_lang$core$Maybe$Nothing, userQuestionSelection: '', cannotChangeQuestion: ''};
	return {ctor: '_Tuple2', _0: initialModel, _1: _elm_lang$core$Platform_Cmd$none};
}();
var _user$project$App$solutions = _elm_lang$core$Dict$fromList(
	A2(
		_elm_lang$core$List$map,
		function (_p4) {
			var _p5 = _p4;
			return {
				ctor: '_Tuple2',
				_0: _p5._0,
				_1: {ctor: '_Tuple2', _0: _p5._1, _1: _p5._2}
			};
		},
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple3',
				_0: 1,
				_1: '233168',
				_2: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('------'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Find the sum of all the multiples of 3 or 5, from 1 to 999'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					})
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple3',
					_0: 2,
					_1: '4613732',
					_2: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('------'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('------'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Find the sum of all EVEN-valued Fibonacci numbers LESS THAN four million.'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						})
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple3',
						_0: 3,
						_1: '6857',
						_2: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('The largest prime factors of 13195 are 5, 7, 13, 29'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('------'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('What is the largest prime factor of the number 600851475143?'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							})
					},
					_1: {ctor: '[]'}
				}
			}
		}));
var _user$project$App$getQuestion = function (i) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'}),
		A2(
			_elm_lang$core$Maybe$map,
			_elm_lang$core$Tuple$second,
			A2(_elm_lang$core$Dict$get, i, _user$project$App$solutions)));
};
var _user$project$App$update = F2(
	function (msg, model) {
		var newModel = function () {
			var _p6 = msg;
			switch (_p6.ctor) {
				case 'UpdateInput':
					return _elm_lang$core$Native_Utils.update(
						model,
						{userInput: _p6._0, correct: _elm_lang$core$Maybe$Nothing});
				case 'UpdateQuestionInput':
					return _elm_lang$core$Native_Utils.update(
						model,
						{userQuestionSelection: _p6._0});
				case 'ChangeQuestion':
					var _p7 = function () {
						var _p8 = _elm_lang$core$String$toInt(model.userQuestionSelection);
						if (_p8.ctor === 'Ok') {
							var _p10 = _p8._0;
							var _p9 = A2(_elm_lang$core$Dict$get, _p10, _user$project$App$solutions);
							if (_p9.ctor === 'Just') {
								return {ctor: '_Tuple2', _0: _p10, _1: ''};
							} else {
								return {ctor: '_Tuple2', _0: model.question, _1: 'Question not found.'};
							}
						} else {
							return {ctor: '_Tuple2', _0: model.question, _1: 'Invalid question number.'};
						}
					}();
					var newQ = _p7._0;
					var errorMessage = _p7._1;
					return _elm_lang$core$Native_Utils.update(
						model,
						{question: newQ, cannotChangeQuestion: errorMessage});
				default:
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							correct: _elm_lang$core$Maybe$Just(
								A2(
									_elm_lang$core$Maybe$withDefault,
									false,
									A2(
										_elm_lang$core$Maybe$map,
										function (_p11) {
											var _p12 = _p11;
											return _elm_lang$core$Native_Utils.eq(_p12._0, model.userInput);
										},
										A2(_elm_lang$core$Dict$get, model.question, _user$project$App$solutions))))
						});
			}
		}();
		return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$App$Model = F5(
	function (a, b, c, d, e) {
		return {userInput: a, question: b, correct: c, userQuestionSelection: d, cannotChangeQuestion: e};
	});
var _user$project$App$CheckAnswer = {ctor: 'CheckAnswer'};
var _user$project$App$ChangeQuestion = {ctor: 'ChangeQuestion'};
var _user$project$App$UpdateQuestionInput = function (a) {
	return {ctor: 'UpdateQuestionInput', _0: a};
};
var _user$project$App$UpdateInput = function (a) {
	return {ctor: 'UpdateInput', _0: a};
};
var _user$project$App$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$App$backgroundStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'QUESTION ',
							_elm_lang$core$Basics$toString(model.question))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Change To Question: '),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('text'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$App$UpdateQuestionInput),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$App$ChangeQuestion),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Change Question'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(model.cannotChangeQuestion),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('---------------------------------------------'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _user$project$App$getQuestion(model.question),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('------'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Answer: '),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$input,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$type_('text'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onInput(_user$project$App$UpdateInput),
															_1: {ctor: '[]'}
														}
													},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$button,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(_user$project$App$CheckAnswer),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Submit Answer'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													function () {
														var _p13 = model.correct;
														if (_p13.ctor === 'Just') {
															if (_p13._0 === true) {
																return 'Correct!';
															} else {
																return 'Wrong.';
															}
														} else {
															return '';
														}
													}()),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$App$main = _elm_lang$html$Html$program(
	{init: _user$project$App$init, view: _user$project$App$view, update: _user$project$App$update, subscriptions: _user$project$App$subscriptions})();
